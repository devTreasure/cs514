import static org.junit.jupiter.api.Assertions.*;

import java.io.Console;
import java.io.UnsupportedEncodingException;
import java.nio.charset.Charset;

import org.junit.Before;
import org.junit.Rule;
import org.junit.jupiter.api.BeforeAll;
import org.junit.jupiter.api.Test;

import junit.framework.Assert;

class ChessBoardTest { 
	
	
	public ChessBoard cb= new ChessBoard();
	
	
	@Before
	@Test
	public void test() throws IllegalPositionExcelption
	{
		this.cb.intialize();
		System.out.println("Before");
	}


	@Test
	public  void Boardhasbeenintializedwith2dArrayandcheckthesizingofAnArray() throws IllegalPositionExcelption
	{
		
		/*
		ChessBoard cb = new ChessBoard();
		cb.intialize();
		*/

		
		ChessPiece[][] boardarray=   cb.getBoard();
		assertEquals(8, boardarray.length); 
		assertEquals(8, boardarray[0].length); 
	
	}
	
	
	@Test
	public void check_BlackROOK_isat_a8() throws IllegalPositionExcelption, UnsupportedEncodingException
	{
		
		ChessBoard cb = new ChessBoard();
		cb.intialize();
		
	
		
		ChessPiece cp=this.cb.getPiece("a8");
		System.out.println(cp.toString());
		assertEquals(cp.toString(),"  \\u265C" );
				
	}
	

}
