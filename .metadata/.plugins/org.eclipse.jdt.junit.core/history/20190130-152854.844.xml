<?xml version="1.0" encoding="UTF-8"?><testrun name="ChessBoardTest" project="A1" tests="11" started="11" failures="1" errors="0" ignored="0">
  <testsuite name="ChessBoardTest" time="0.0" uniqueid="[engine:junit-jupiter]/[class:ChessBoardTest]">
    <testcase name="check_Black_Pawn2_isat_b7" classname="ChessBoardTest" time="0.0" displayname="check_Black_Pawn2_isat_b7()" uniqueid="[engine:junit-jupiter]/[class:ChessBoardTest]/[method:check_Black_Pawn2_isat_b7()]">
      <failure>
        <expected>0</expected>
        <actual>1</actual>org.opentest4j.AssertionFailedError: expected: &lt;0&gt; but was: &lt;1&gt;&#13;
	at org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:52)&#13;
	at org.junit.jupiter.api.AssertEquals.failNotEqual(AssertEquals.java:177)&#13;
	at org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:144)&#13;
	at org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:135)&#13;
	at org.junit.jupiter.api.Assertions.assertEquals(Assertions.java:300)&#13;
	at ChessBoardTest.check_Black_Pawn2_isat_b7(ChessBoardTest.java:227)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:389)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:115)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:167)&#13;
	at org.junit.jupiter.engine.execution.ThrowableCollector.execute(ThrowableCollector.java:40)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:163)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:110)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:57)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:83)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92)&#13;
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(Unknown Source)&#13;
	at java.util.stream.ReferencePipeline$2$1.accept(Unknown Source)&#13;
	at java.util.Iterator.forEachRemaining(Unknown Source)&#13;
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Unknown Source)&#13;
	at java.util.stream.AbstractPipeline.copyInto(Unknown Source)&#13;
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(Unknown Source)&#13;
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(Unknown Source)&#13;
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(Unknown Source)&#13;
	at java.util.stream.AbstractPipeline.evaluate(Unknown Source)&#13;
	at java.util.stream.ReferencePipeline.forEach(Unknown Source)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92)&#13;
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(Unknown Source)&#13;
	at java.util.stream.ReferencePipeline$2$1.accept(Unknown Source)&#13;
	at java.util.Iterator.forEachRemaining(Unknown Source)&#13;
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Unknown Source)&#13;
	at java.util.stream.AbstractPipeline.copyInto(Unknown Source)&#13;
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(Unknown Source)&#13;
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(Unknown Source)&#13;
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(Unknown Source)&#13;
	at java.util.stream.AbstractPipeline.evaluate(Unknown Source)&#13;
	at java.util.stream.ReferencePipeline.forEach(Unknown Source)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:51)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:43)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90)&#13;
	at org.eclipse.jdt.internal.junit5.runner.JUnit5TestReference.run(JUnit5TestReference.java:86)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:538)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:760)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:460)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:206)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="check_Black_ROOK_isat_a8" classname="ChessBoardTest" time="0.0" displayname="check_Black_ROOK_isat_a8()" uniqueid="[engine:junit-jupiter]/[class:ChessBoardTest]/[method:check_Black_ROOK_isat_a8()]"/>
    <testcase name="check_Black_Knoght2_isat_g8" classname="ChessBoardTest" time="0.0" displayname="check_Black_Knoght2_isat_g8()" uniqueid="[engine:junit-jupiter]/[class:ChessBoardTest]/[method:check_Black_Knoght2_isat_g8()]"/>
    <testcase name="check_Black_Queen_isat_d8" classname="ChessBoardTest" time="0.0" displayname="check_Black_Queen_isat_d8()" uniqueid="[engine:junit-jupiter]/[class:ChessBoardTest]/[method:check_Black_Queen_isat_d8()]"/>
    <testcase name="check_Black_Queen_isat_e8" classname="ChessBoardTest" time="0.0" displayname="check_Black_Queen_isat_e8()" uniqueid="[engine:junit-jupiter]/[class:ChessBoardTest]/[method:check_Black_Queen_isat_e8()]"/>
    <testcase name="check_Black_Bishop_isat_c8" classname="ChessBoardTest" time="0.0" displayname="check_Black_Bishop_isat_c8()" uniqueid="[engine:junit-jupiter]/[class:ChessBoardTest]/[method:check_Black_Bishop_isat_c8()]"/>
    <testcase name="check_Black_Pawn1_isat_a7" classname="ChessBoardTest" time="0.0" displayname="check_Black_Pawn1_isat_a7()" uniqueid="[engine:junit-jupiter]/[class:ChessBoardTest]/[method:check_Black_Pawn1_isat_a7()]"/>
    <testcase name="Boardhasbeenintializedwith2dArrayandcheckthesizingofAnArray" classname="ChessBoardTest" time="0.0" displayname="Boardhasbeenintializedwith2dArrayandcheckthesizingofAnArray()" uniqueid="[engine:junit-jupiter]/[class:ChessBoardTest]/[method:Boardhasbeenintializedwith2dArrayandcheckthesizingofAnArray()]"/>
    <testcase name="check_Black_Bishop2_isat_f8" classname="ChessBoardTest" time="0.0" displayname="check_Black_Bishop2_isat_f8()" uniqueid="[engine:junit-jupiter]/[class:ChessBoardTest]/[method:check_Black_Bishop2_isat_f8()]"/>
    <testcase name="check_Black_Knight_isat_b8" classname="ChessBoardTest" time="0.0" displayname="check_Black_Knight_isat_b8()" uniqueid="[engine:junit-jupiter]/[class:ChessBoardTest]/[method:check_Black_Knight_isat_b8()]"/>
    <testcase name="check_Black_ROOK2_isat_h8" classname="ChessBoardTest" time="0.0" displayname="check_Black_ROOK2_isat_h8()" uniqueid="[engine:junit-jupiter]/[class:ChessBoardTest]/[method:check_Black_ROOK2_isat_h8()]"/>
  </testsuite>
</testrun>
